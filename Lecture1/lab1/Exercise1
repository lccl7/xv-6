Lab1: Booting a PC

Introduction:
此实验分三部分：
第一部分关注点在熟悉X86汇编语言，QEMU X86 模拟器，PC开机启动程序。
第二部分检查boot/ 目录下的6.828内核boot loader
第三部分深入探讨6.828内核本身，称为JOS，它在kernel/ 目录下。

Part1：PC Bootstrap

1.1   getting started with X86 assembly.
Exercise 1
Familiarize yourself with the assembly language materials available on the 6.828 reference page. 
You don't have to read them now, but you'll almost certainly want to refer to some of this material
when reading and writing x86 assembly.

1.2   simulating the X86
athena% cd lab
athena% make
+ as kern/entry.S
+ cc kern/init.c
+ cc kern/console.c
+ cc kern/monitor.c
+ cc kern/printf.c
+ cc lib/printfmt.c
+ cc lib/readline.c
+ cc lib/string.c
+ ld obj/kern/kernel
+ as boot/boot.S
+ cc -Os boot/main.c
+ ld boot/boot
boot block is 414 bytes (max 510)
+ mk obj/kern/kernel.img
athena% make qemu
Booting from Hard Disk...
6828 decimal is XXX octal!
entering test_backtrace 5
entering test_backtrace 4
entering test_backtrace 3
entering test_backtrace 2
entering test_backtrace 1
entering test_backtrace 0
leaving test_backtrace 0
leaving test_backtrace 1
leaving test_backtrace 2
leaving test_backtrace 3
leaving test_backtrace 4
leaving test_backtrace 5
Welcome to the JOS kernel monitor!
Type 'help' for a list of commands.
K>

The PC's Physical Address Space (PC 物理地址空间)
现在深入了解一点PC启动的细节。PC机的物理地址空间硬连接具有下列总体布局：
+------------------+  <- 0xFFFFFFFF (4GB)
|      32-bit      |
|  memory mapped   |
|     devices      |
|                  |
/\/\/\/\/\/\/\/\/\/\

/\/\/\/\/\/\/\/\/\/\
|                  |
|      Unused      |
|                  |
+------------------+  <- depends on amount of RAM
|                  |
|                  |
| Extended Memory  |
|                  |
|                  |
+------------------+  <- 0x00100000 (1MB)
|     BIOS ROM     |
+------------------+  <- 0x000F0000 (960KB)
|  16-bit devices, |
|  expansion ROMs  |
+------------------+  <- 0x000C0000 (768KB)
|   VGA Display    |
+------------------+  <- 0x000A0000 (640KB)
|                  |
|    Low Memory    |
|                  |
+------------------+  <- 0x00000000
最开始的PC机，是建立在16位Intel 8086处理器上，只有1MB的物理内存，为0x00000000 - 0x000FFFFF。
上图标记的Low Memory为早期的PC机可用的640KB RAM。从0x000A0000到0x000FFFFF的384KB的内存空间
预留给硬件使用，比如非易失性的存储器，或者显卡缓存。这部分区域中最重要的是BIOS，内存空间为
0x000F0000 - 0x00100000。早期的BIOS 保存在真实的物理内存中，现在则存储在可更新的闪存。BIOS
的作用是负责执行基本系统初始化如激活显卡和检查安装的内存量。在执行初始化后，BIOS从适当的位
置加载操作系统诸如软盘，硬盘，CD-ROM，或网络，并把控制权交给操作系统。
当Intel最终“跨越1M障碍”，设计出出分别支持16MB和4GB的80286和80386后，PC设计师仍然保存最低的
1MB内存空间作为原始布局，以保证向后兼容的软件。因此，现代PC机在物理内存中的“洞”，从0x000A0000
到0x00100000，划分成RAM“低”或“常规内存”（第一640KB）和“扩展内存”（一切）。
此外，在PC的32位物理地址空间的顶部预留一定的空间，现在普遍用的32位PCI设备保留的BIOS以供使用。
现代的x86处理器可以支持超过4GB的物理内存，所以内存可以在0xFFFFFFFF地址上进一步延伸。
由于设计上的限制，使得JOS只有256MB物理内存，所以现在假设所有的PC都“只有”32位物理地址空间。
